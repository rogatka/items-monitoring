server:
  port: 8083

spring:
  data:
    mongodb:
      host: ${ITEMS_DB_HOST}
      port: ${ITEMS_DB_PORT}
      database: ${ITEMS_DB_NAME}
      username: ${ITEMS_DB_USER}
      password: ${ITEMS_DB_PASSWORD}
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  cache:
    type: redis
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI}
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID}

management:
  endpoints.web.exposure.include: "*"
  endpoint.health.show-details: always
  tracing:
    enabled: true
    sampling.probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT}
  health:
    circuitbreakers:
      enabled: ${CB_ENABLED:true}

resilience4j:
  circuitbreaker:
    instances:
      elasticsearchGameRepositoryCircuitBreaker:
        registerHealthIndicator: true
        failureRateThreshold: ${ELASTICSEARCH_GAME_CB_FAILURE_RATE_THRESHOLD:10}
        minimumNumberOfCalls: ${ELASTICSEARCH_GAME_CB_MINIMUM_NUMBER_OF_CALLS:3}
        permittedNumberOfCallsInHalfOpenState: ${ELASTICSEARCH_GAME_CB_NUMBER_OF_CALLS_IN_HALF_OPEN_STATE:3}
        slidingWindowSize: ${ELASTICSEARCH_GAME_CB_SLIDING_WINDOW_SIZE:30}
        slidingWindowType: ${ELASTICSEARCH_GAME_CB_SLIDING_WINDOW_TYPE:COUNT_BASED}
        slowCallDurationThreshold: ${ELASTICSEARCH_GAME_CB_SLOW_CALL_DURATION_THRESHOLD:1s}
        slowCallRateThreshold: ${ELASTICSEARCH_GAME_CB_SLOW_CALL_RATE_THRESHOLD:10}
        waitDurationInOpenState: ${ELASTICSEARCH_GAME_CB_OPEN_STATE_WAIT_DURATION:5s}

logging:
  pattern:
    level: "trace_id=%mdc{traceId} span_id=%mdc{spanId} trace_flags=%mdc{traceFlags} %p"
  level:
    ROOT: WARN
    com.items.monitoring: INFO