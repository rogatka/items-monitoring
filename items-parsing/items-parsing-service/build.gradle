plugins {
	id "org.springframework.boot" version "${springBootVersion}"
	id "io.spring.dependency-management" version "${ioSpringDependencyManagementPluginVersion}"
	id "java"
}

group = "com.items"
version = "0.0.4-SNAPSHOT"
sourceCompatibility = "17"

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

ext {
	jsoupVersion = "1.15.3"
	micrometerTracingBomVersion = "1.0.1"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(":items-parsing-client")
	implementation "org.springframework.boot:spring-boot-starter-webflux"
	implementation "org.springframework.kafka:spring-kafka"
	implementation "org.jsoup:jsoup:${jsoupVersion}"
	compileOnly "org.projectlombok:lombok"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation(platform("io.micrometer:micrometer-tracing-bom:${micrometerTracingBomVersion}"))
	implementation "io.micrometer:micrometer-tracing"
	implementation "io.micrometer:micrometer-tracing-bridge-otel"
	implementation "io.opentelemetry:opentelemetry-exporter-zipkin"
	annotationProcessor "org.projectlombok:lombok"
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.kafka:spring-kafka-test"
}

tasks.named("test") {
	useJUnitPlatform()
}
